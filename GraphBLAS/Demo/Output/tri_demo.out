--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.000 sec

total time to read A matrix:       0.000254 sec

n 65 # edges 376
U=triu(A) time:        0.000028 sec
L=tril(A) time:        0.000007 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000057 sec
tricount time:         0.000061 sec (dot product method)
tri+prep time:         0.000097 sec (incl time to compute L and U)
compute C time:        0.000057 sec
reduce (C) time:       0.000005 sec
rate     3.89 million edges/sec (incl time for U=triu(A))
rate     6.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 2 speedup 4.15599)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate     7.42 million edges/sec (incl time for U=triu(A))
rate    24.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 4 speedup 5.05627)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000002 sec
rate     7.84 million edges/sec (incl time for U=triu(A))
rate    29.50 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 8 speedup 5.0794)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000002 sec
rate     7.85 million edges/sec (incl time for U=triu(A))
rate    29.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000002 sec
rate     7.07 million edges/sec (incl time for U=triu(A))
rate    20.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 1.36091)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000002 sec
rate     7.72 million edges/sec (incl time for U=triu(A))
rate    27.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 4 speedup 1.38573)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000002 sec
rate     7.75 million edges/sec (incl time for U=triu(A))
rate    28.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 8 speedup 1.39356)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000002 sec
rate     7.77 million edges/sec (incl time for U=triu(A))
rate    28.54 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000051 sec
tricount time:         0.000052 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000002 sec
rate     6.31 million edges/sec (incl time for L=tril(A))
rate     7.17 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 2 speedup 2.00982)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000034 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000001 sec
rate    11.11 million edges/sec (incl time for L=tril(A))
rate    14.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 4 speedup 2.34526)
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000001 sec
rate    12.45 million edges/sec (incl time for L=tril(A))
rate    16.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 8 speedup 2.29399)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000031 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate    12.23 million edges/sec (incl time for L=tril(A))
rate    15.90 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000101 sec

n 5 # edges 9
U=triu(A) time:        0.000024 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000024 sec
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000054 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000003 sec
rate     0.17 million edges/sec (incl time for U=triu(A))
rate     0.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 4.80951)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.27 million edges/sec (incl time for U=triu(A))
rate     1.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 6.80389)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     2.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 6.99995)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     2.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.28 million edges/sec (incl time for U=triu(A))
rate     1.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1.28269)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     2.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.23356)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     2.18 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.37847)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     2.42 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000012 sec
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000016 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate     0.56 million edges/sec (incl time for L=tril(A))
rate     0.69 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000003 sec (nthreads: 2 speedup 4.12281)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000007 sec (incl time to compute L)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     1.37 million edges/sec (incl time for L=tril(A))
rate     2.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 4 speedup 5.12891)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000006 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     1.50 million edges/sec (incl time for L=tril(A))
rate     3.25 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000003 sec (nthreads: 8 speedup 3.73818)
tricount time:         0.000004 sec (saxpy method)
tri+prep time:         0.000007 sec (incl time to compute L)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     1.28 million edges/sec (incl time for L=tril(A))
rate     2.37 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000136 sec

n 3 # edges 0
U=triu(A) time:        0.000023 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000032 sec
tricount time:         0.000034 sec (dot product method)
tri+prep time:         0.000061 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000002 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 6.70786)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 8.34564)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 8.56331)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000030 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 2 speedup 1.32441)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 1.26397)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 0.710361)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000026 sec
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000031 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 2 speedup 3.9542)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000011 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 4 speedup 6.0321)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 4.8894)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000182 sec

n 4 # edges 2
U=triu(A) time:        0.000042 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000035 sec
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000003 sec
rate     0.02 million edges/sec (incl time for U=triu(A))
rate     0.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 6.83555)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 11.2006)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 10.4373)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000054 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.09848)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.68923)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.97691)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.04 million edges/sec (incl time for U=triu(A))
rate     0.60 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000022 sec
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000001 sec
rate     0.07 million edges/sec (incl time for L=tril(A))
rate     0.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 2 speedup 2.89783)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     0.15 million edges/sec (incl time for L=tril(A))
rate     0.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 4 speedup 4.92595)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.20 million edges/sec (incl time for L=tril(A))
rate     0.42 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 8 speedup 2.76205)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000014 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     0.15 million edges/sec (incl time for L=tril(A))
rate     0.24 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000188 sec

n 4 # edges 5
U=triu(A) time:        0.000030 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000028 sec
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000028 sec
reduce (C) time:       0.000003 sec
rate     0.08 million edges/sec (incl time for U=triu(A))
rate     0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 5.73686)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     0.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 8.37966)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     1.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 8.68117)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     1.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     1.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.20088)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     1.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.08018)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     1.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 1.68545)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate     0.14 million edges/sec (incl time for U=triu(A))
rate     1.79 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000008 sec
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000000 sec
rate     0.40 million edges/sec (incl time for L=tril(A))
rate     0.57 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 2 speedup 3.33955)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000007 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.75 million edges/sec (incl time for L=tril(A))
rate     1.75 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 4 speedup 4.10873)
tricount time:         0.000002 sec (saxpy method)
tri+prep time:         0.000006 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.81 million edges/sec (incl time for L=tril(A))
rate     2.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 8 speedup 1.98804)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.59 million edges/sec (incl time for L=tril(A))
rate     1.07 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000242 sec

n 7 # edges 8
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000033 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000057 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000003 sec
rate     0.14 million edges/sec (incl time for U=triu(A))
rate     0.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 6.33494)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     1.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 8.49876)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 9.15498)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     2.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1.09382)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.21016)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.32 million edges/sec (incl time for U=triu(A))
rate     2.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.26045)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.32 million edges/sec (incl time for U=triu(A))
rate     2.16 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000020 sec
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000000 sec
rate     0.34 million edges/sec (incl time for L=tril(A))
rate     0.40 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 2 speedup 4.04016)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.93 million edges/sec (incl time for L=tril(A))
rate     1.53 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 4 speedup 4.86751)
tricount time:         0.000004 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     1.03 million edges/sec (incl time for L=tril(A))
rate     1.83 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 3.92911)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.91 million edges/sec (incl time for L=tril(A))
rate     1.47 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000394 sec

n 304 # edges 438
U=triu(A) time:        0.000025 sec
L=tril(A) time:        0.000008 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000036 sec
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000002 sec
rate     6.16 million edges/sec (incl time for U=triu(A))
rate    11.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 3.71621)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate    10.23 million edges/sec (incl time for U=triu(A))
rate    41.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 4.44921)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate    10.67 million edges/sec (incl time for U=triu(A))
rate    49.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 4.49582)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate    10.69 million edges/sec (incl time for U=triu(A))
rate    49.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate    10.80 million edges/sec (incl time for U=triu(A))
rate    52.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 1.081)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate    10.99 million edges/sec (incl time for U=triu(A))
rate    57.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 1.09474)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate    11.03 million edges/sec (incl time for U=triu(A))
rate    58.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.109)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate    11.05 million edges/sec (incl time for U=triu(A))
rate    58.79 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000048 sec (saxpy method)
tri+prep time:         0.000056 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000001 sec
rate     7.82 million edges/sec (incl time for L=tril(A))
rate     9.06 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000028 sec (nthreads: 2 speedup 1.71429)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000036 sec (incl time to compute L)
compute C time:        0.000028 sec
reduce (C) time:       0.000000 sec
rate    12.16 million edges/sec (incl time for L=tril(A))
rate    15.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 4 speedup 1.75412)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000035 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000000 sec
rate    12.39 million edges/sec (incl time for L=tril(A))
rate    15.83 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 8 speedup 1.59233)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000000 sec
rate    11.49 million edges/sec (incl time for L=tril(A))
rate    14.39 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000287 sec

n 48 # edges 176
U=triu(A) time:        0.000028 sec
L=tril(A) time:        0.000009 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000043 sec
tricount time:         0.000047 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000043 sec
reduce (C) time:       0.000003 sec
rate     2.10 million edges/sec (incl time for U=triu(A))
rate     3.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 4.16297)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate     3.60 million edges/sec (incl time for U=triu(A))
rate    14.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 5.94283)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000045 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate     3.88 million edges/sec (incl time for U=triu(A))
rate    21.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 8 speedup 4.00864)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     3.57 million edges/sec (incl time for U=triu(A))
rate    14.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000052 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate     3.37 million edges/sec (incl time for U=triu(A))
rate    11.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.56815)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate     3.76 million edges/sec (incl time for U=triu(A))
rate    18.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 4 speedup 1.21667)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     3.54 million edges/sec (incl time for U=triu(A))
rate    13.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 8 speedup 1.20288)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     3.53 million edges/sec (incl time for U=triu(A))
rate    13.81 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000047 sec
tricount time:         0.000048 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000047 sec
reduce (C) time:       0.000001 sec
rate     3.06 million edges/sec (incl time for L=tril(A))
rate     3.66 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 2 speedup 2.466)
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000001 sec
rate     6.04 million edges/sec (incl time for L=tril(A))
rate     8.93 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 3.50546)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000023 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000001 sec
rate     7.51 million edges/sec (incl time for L=tril(A))
rate    12.58 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 8 speedup 3.0676)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000025 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate     6.91 million edges/sec (incl time for L=tril(A))
rate    10.97 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.073128 sec

n 4884 # edges 142747
U=triu(A) time:        0.000225 sec
L=tril(A) time:        0.000142 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.013911 sec
tricount time:         0.014396 sec (dot product method)
tri+prep time:         0.014764 sec (incl time to compute L and U)
compute C time:        0.013911 sec
reduce (C) time:       0.000486 sec
rate     9.67 million edges/sec (incl time for U=triu(A))
rate     9.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.006919 sec (nthreads: 2 speedup 2.01037)
tricount time:         0.007159 sec (dot product method)
tri+prep time:         0.007527 sec (incl time to compute L and U)
compute C time:        0.006919 sec
reduce (C) time:       0.000239 sec
rate    18.97 million edges/sec (incl time for U=triu(A))
rate    19.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.003827 sec (nthreads: 4 speedup 3.63466)
tricount time:         0.004121 sec (dot product method)
tri+prep time:         0.004488 sec (incl time to compute L and U)
compute C time:        0.003827 sec
reduce (C) time:       0.000293 sec
rate    31.80 million edges/sec (incl time for U=triu(A))
rate    34.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.005970 sec (nthreads: 8 speedup 2.33004)
tricount time:         0.006280 sec (dot product method)
tri+prep time:         0.006648 sec (incl time to compute L and U)
compute C time:        0.005970 sec
reduce (C) time:       0.000310 sec
rate    21.47 million edges/sec (incl time for U=triu(A))
rate    22.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.015373 sec
tricount time:         0.015847 sec (dot product method)
tri+prep time:         0.016215 sec (incl time to compute L and U)
compute C time:        0.015373 sec
reduce (C) time:       0.000475 sec
rate     8.80 million edges/sec (incl time for U=triu(A))
rate     9.01 million edges/sec (just tricount itself)
L*U' time (dot):         0.007376 sec (nthreads: 2 speedup 2.08416)
tricount time:         0.007622 sec (dot product method)
tri+prep time:         0.007989 sec (incl time to compute L and U)
compute C time:        0.007376 sec
reduce (C) time:       0.000246 sec
rate    17.87 million edges/sec (incl time for U=triu(A))
rate    18.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.004246 sec (nthreads: 4 speedup 3.62042)
tricount time:         0.004506 sec (dot product method)
tri+prep time:         0.004874 sec (incl time to compute L and U)
compute C time:        0.004246 sec
reduce (C) time:       0.000260 sec
rate    29.29 million edges/sec (incl time for U=triu(A))
rate    31.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.006729 sec (nthreads: 8 speedup 2.28465)
tricount time:         0.007020 sec (dot product method)
tri+prep time:         0.007388 sec (incl time to compute L and U)
compute C time:        0.006729 sec
reduce (C) time:       0.000292 sec
rate    19.32 million edges/sec (incl time for U=triu(A))
rate    20.33 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.014019 sec
tricount time:         0.014413 sec (saxpy method)
tri+prep time:         0.014556 sec (incl time to compute L)
compute C time:        0.014019 sec
reduce (C) time:       0.000394 sec
rate     9.81 million edges/sec (incl time for L=tril(A))
rate     9.90 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.007036 sec (nthreads: 2 speedup 1.99254)
tricount time:         0.007225 sec (saxpy method)
tri+prep time:         0.007367 sec (incl time to compute L)
compute C time:        0.007036 sec
reduce (C) time:       0.000189 sec
rate    19.38 million edges/sec (incl time for L=tril(A))
rate    19.76 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004042 sec (nthreads: 4 speedup 3.46866)
tricount time:         0.004236 sec (saxpy method)
tri+prep time:         0.004378 sec (incl time to compute L)
compute C time:        0.004042 sec
reduce (C) time:       0.000194 sec
rate    32.60 million edges/sec (incl time for L=tril(A))
rate    33.70 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003180 sec (nthreads: 8 speedup 4.40848)
tricount time:         0.003398 sec (saxpy method)
tri+prep time:         0.003540 sec (incl time to compute L)
compute C time:        0.003180 sec
reduce (C) time:       0.000218 sec
rate    40.32 million edges/sec (incl time for L=tril(A))
rate    42.01 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.000637 sec

n 183 # edges 701
U=triu(A) time:        0.000030 sec
L=tril(A) time:        0.000010 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000067 sec
tricount time:         0.000072 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000067 sec
reduce (C) time:       0.000005 sec
rate     6.28 million edges/sec (incl time for U=triu(A))
rate     9.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000039 sec (nthreads: 2 speedup 1.74055)
tricount time:         0.000042 sec (dot product method)
tri+prep time:         0.000081 sec (incl time to compute L and U)
compute C time:        0.000039 sec
reduce (C) time:       0.000003 sec
rate     8.65 million edges/sec (incl time for U=triu(A))
rate    16.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000035 sec (nthreads: 4 speedup 1.92135)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000003 sec
rate     9.09 million edges/sec (incl time for U=triu(A))
rate    18.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 8 speedup 2.0853)
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000003 sec
rate     9.45 million edges/sec (incl time for U=triu(A))
rate    20.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000044 sec
tricount time:         0.000047 sec (dot product method)
tri+prep time:         0.000086 sec (incl time to compute L and U)
compute C time:        0.000044 sec
reduce (C) time:       0.000003 sec
rate     8.15 million edges/sec (incl time for U=triu(A))
rate    15.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000040 sec (nthreads: 2 speedup 1.10621)
tricount time:         0.000042 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000040 sec
reduce (C) time:       0.000003 sec
rate     8.59 million edges/sec (incl time for U=triu(A))
rate    16.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000050 sec (nthreads: 4 speedup 0.871133)
tricount time:         0.000053 sec (dot product method)
tri+prep time:         0.000092 sec (incl time to compute L and U)
compute C time:        0.000050 sec
reduce (C) time:       0.000003 sec
rate     7.59 million edges/sec (incl time for U=triu(A))
rate    13.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000035 sec (nthreads: 8 speedup 1.24625)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000002 sec
rate     9.10 million edges/sec (incl time for U=triu(A))
rate    18.60 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000059 sec
tricount time:         0.000060 sec (saxpy method)
tri+prep time:         0.000070 sec (incl time to compute L)
compute C time:        0.000059 sec
reduce (C) time:       0.000002 sec
rate    10.03 million edges/sec (incl time for L=tril(A))
rate    11.64 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 2 speedup 1.664)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate    15.16 million edges/sec (incl time for L=tril(A))
rate    19.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 4 speedup 1.80297)
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000001 sec
rate    16.10 million edges/sec (incl time for L=tril(A))
rate    20.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 8 speedup 1.81218)
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000002 sec
rate    16.13 million edges/sec (incl time for L=tril(A))
rate    20.72 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000214 sec

n 63 # edges 123
U=triu(A) time:        0.000016 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000021 sec
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000001 sec
rate     2.86 million edges/sec (incl time for U=triu(A))
rate     5.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 4.69135)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     4.79 million edges/sec (incl time for U=triu(A))
rate    25.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 6.61758)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     5.07 million edges/sec (incl time for U=triu(A))
rate    35.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 7.13425)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     5.12 million edges/sec (incl time for U=triu(A))
rate    37.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.98 million edges/sec (incl time for U=triu(A))
rate    31.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.15055)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     5.09 million edges/sec (incl time for U=triu(A))
rate    36.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.26994)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     5.16 million edges/sec (incl time for U=triu(A))
rate    39.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.35606)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     5.19 million edges/sec (incl time for U=triu(A))
rate    42.14 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000023 sec
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate     4.44 million edges/sec (incl time for L=tril(A))
rate     5.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 2 speedup 1.72664)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     6.83 million edges/sec (incl time for L=tril(A))
rate     9.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 4 speedup 1.85064)
tricount time:         0.000012 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000000 sec
rate     7.20 million edges/sec (incl time for L=tril(A))
rate     9.85 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 8 speedup 1.40767)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000000 sec
rate     5.84 million edges/sec (incl time for L=tril(A))
rate     7.48 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000211 sec

n 63 # edges 123
U=triu(A) time:        0.000019 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000026 sec
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000026 sec
reduce (C) time:       0.000002 sec
rate     2.42 million edges/sec (incl time for U=triu(A))
rate     4.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 5.61418)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     4.34 million edges/sec (incl time for U=triu(A))
rate    24.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 8.20958)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.59 million edges/sec (incl time for U=triu(A))
rate    35.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 8.76997)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.62 million edges/sec (incl time for U=triu(A))
rate    37.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.52 million edges/sec (incl time for U=triu(A))
rate    31.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.0719)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.57 million edges/sec (incl time for U=triu(A))
rate    34.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.18954)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.62 million edges/sec (incl time for U=triu(A))
rate    37.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.21036)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.64 million edges/sec (incl time for U=triu(A))
rate    38.43 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000025 sec
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000000 sec
rate     4.13 million edges/sec (incl time for L=tril(A))
rate     4.87 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 2 speedup 1.89479)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     6.84 million edges/sec (incl time for L=tril(A))
rate     9.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 4 speedup 1.99589)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000000 sec
rate     7.11 million edges/sec (incl time for L=tril(A))
rate     9.65 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 8 speedup 1.52101)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000000 sec
rate     5.80 million edges/sec (incl time for L=tril(A))
rate     7.39 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000179 sec

n 78 # edges 102
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000021 sec
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000044 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000002 sec
rate     2.32 million edges/sec (incl time for U=triu(A))
rate     4.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 4.33904)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     3.85 million edges/sec (incl time for U=triu(A))
rate    18.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 6.50257)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.13 million edges/sec (incl time for U=triu(A))
rate    28.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 7.15529)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.19 million edges/sec (incl time for U=triu(A))
rate    30.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.13 million edges/sec (incl time for U=triu(A))
rate    27.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.08112)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.18 million edges/sec (incl time for U=triu(A))
rate    30.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.16769)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.22 million edges/sec (incl time for U=triu(A))
rate    32.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 0.821643)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     4.01 million edges/sec (incl time for U=triu(A))
rate    23.28 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000022 sec
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000000 sec
rate     3.86 million edges/sec (incl time for L=tril(A))
rate     4.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 2 speedup 1.7295)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     5.94 million edges/sec (incl time for L=tril(A))
rate     7.86 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 4 speedup 1.76988)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000000 sec
rate     6.06 million edges/sec (incl time for L=tril(A))
rate     8.07 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 8 speedup 0.885225)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000000 sec
rate     3.49 million edges/sec (incl time for L=tril(A))
rate     4.07 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.029471 sec

n 982 # edges 49920
U=triu(A) time:        0.000174 sec
L=tril(A) time:        0.000148 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000362 sec
tricount time:         0.000395 sec (dot product method)
tri+prep time:         0.000716 sec (incl time to compute L and U)
compute C time:        0.000362 sec
reduce (C) time:       0.000032 sec
rate    69.75 million edges/sec (incl time for U=triu(A))
rate   126.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000333 sec (nthreads: 2 speedup 1.08962)
tricount time:         0.000363 sec (dot product method)
tri+prep time:         0.000684 sec (incl time to compute L and U)
compute C time:        0.000333 sec
reduce (C) time:       0.000030 sec
rate    72.98 million edges/sec (incl time for U=triu(A))
rate   137.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000273 sec (nthreads: 4 speedup 1.32884)
tricount time:         0.000318 sec (dot product method)
tri+prep time:         0.000639 sec (incl time to compute L and U)
compute C time:        0.000273 sec
reduce (C) time:       0.000045 sec
rate    78.14 million edges/sec (incl time for U=triu(A))
rate   157.11 million edges/sec (just tricount itself)
L*U' time (dot):         0.002922 sec (nthreads: 8 speedup 0.124043)
tricount time:         0.002957 sec (dot product method)
tri+prep time:         0.003278 sec (incl time to compute L and U)
compute C time:        0.002922 sec
reduce (C) time:       0.000035 sec
rate    15.23 million edges/sec (incl time for U=triu(A))
rate    16.88 million edges/sec (just tricount itself)
L*U' time (dot):         0.000374 sec
tricount time:         0.000402 sec (dot product method)
tri+prep time:         0.000723 sec (incl time to compute L and U)
compute C time:        0.000374 sec
reduce (C) time:       0.000028 sec
rate    69.08 million edges/sec (incl time for U=triu(A))
rate   124.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000279 sec (nthreads: 2 speedup 1.33844)
tricount time:         0.000307 sec (dot product method)
tri+prep time:         0.000628 sec (incl time to compute L and U)
compute C time:        0.000279 sec
reduce (C) time:       0.000027 sec
rate    79.52 million edges/sec (incl time for U=triu(A))
rate   162.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000236 sec (nthreads: 4 speedup 1.58021)
tricount time:         0.000266 sec (dot product method)
tri+prep time:         0.000587 sec (incl time to compute L and U)
compute C time:        0.000236 sec
reduce (C) time:       0.000030 sec
rate    85.01 million edges/sec (incl time for U=triu(A))
rate   187.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.001664 sec (nthreads: 8 speedup 0.224596)
tricount time:         0.001696 sec (dot product method)
tri+prep time:         0.002017 sec (incl time to compute L and U)
compute C time:        0.001664 sec
reduce (C) time:       0.000033 sec
rate    24.75 million edges/sec (incl time for U=triu(A))
rate    29.43 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000412 sec
tricount time:         0.000413 sec (saxpy method)
tri+prep time:         0.000560 sec (incl time to compute L)
compute C time:        0.000412 sec
reduce (C) time:       0.000001 sec
rate    89.11 million edges/sec (incl time for L=tril(A))
rate   120.99 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000348 sec (nthreads: 2 speedup 1.1835)
tricount time:         0.000349 sec (saxpy method)
tri+prep time:         0.000496 sec (incl time to compute L)
compute C time:        0.000348 sec
reduce (C) time:       0.000001 sec
rate   100.62 million edges/sec (incl time for L=tril(A))
rate   143.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000373 sec (nthreads: 4 speedup 1.10476)
tricount time:         0.000373 sec (saxpy method)
tri+prep time:         0.000521 sec (incl time to compute L)
compute C time:        0.000373 sec
reduce (C) time:       0.000001 sec
rate    95.85 million edges/sec (incl time for L=tril(A))
rate   133.75 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000377 sec (nthreads: 8 speedup 1.0916)
tricount time:         0.000378 sec (saxpy method)
tri+prep time:         0.000526 sec (incl time to compute L)
compute C time:        0.000377 sec
reduce (C) time:       0.000001 sec
rate    94.97 million edges/sec (incl time for L=tril(A))
rate   132.06 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000275 sec

n 67 # edges 287
U=triu(A) time:        0.000024 sec
L=tril(A) time:        0.000007 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000032 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000065 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000003 sec
rate     4.41 million edges/sec (incl time for U=triu(A))
rate     8.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 2 speedup 2.86698)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     6.75 million edges/sec (incl time for U=triu(A))
rate    23.50 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 3.78072)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     7.26 million edges/sec (incl time for U=triu(A))
rate    31.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 4.41994)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate     7.52 million edges/sec (incl time for U=triu(A))
rate    36.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000044 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate     6.56 million edges/sec (incl time for U=triu(A))
rate    21.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1.20171)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate     6.94 million edges/sec (incl time for U=triu(A))
rate    25.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 1.38725)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate     7.19 million edges/sec (incl time for U=triu(A))
rate    29.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.50481)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000039 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     7.33 million edges/sec (incl time for U=triu(A))
rate    32.36 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000033 sec
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000041 sec (incl time to compute L)
compute C time:        0.000033 sec
reduce (C) time:       0.000001 sec
rate     7.05 million edges/sec (incl time for L=tril(A))
rate     8.43 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 2 speedup 2.01304)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000001 sec
rate    12.08 million edges/sec (incl time for L=tril(A))
rate    16.79 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 4 speedup 2.44745)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate    13.81 million edges/sec (incl time for L=tril(A))
rate    20.31 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 8 speedup 2.43042)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate    13.68 million edges/sec (incl time for L=tril(A))
rate    20.04 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.166 sec

total time to read A matrix:       0.168617 sec

n 120801 # edges 881200
U=triu(A) time:        0.002978 sec
L=tril(A) time:        0.002865 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.029921 sec
tricount time:         0.032427 sec (dot product method)
tri+prep time:         0.038270 sec (incl time to compute L and U)
compute C time:        0.029921 sec
reduce (C) time:       0.002506 sec
rate    23.03 million edges/sec (incl time for U=triu(A))
rate    27.18 million edges/sec (just tricount itself)
L*U' time (dot):         0.011246 sec (nthreads: 2 speedup 2.66055)
tricount time:         0.012483 sec (dot product method)
tri+prep time:         0.018327 sec (incl time to compute L and U)
compute C time:        0.011246 sec
reduce (C) time:       0.001237 sec
rate    48.08 million edges/sec (incl time for U=triu(A))
rate    70.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.008601 sec (nthreads: 4 speedup 3.47878)
tricount time:         0.009216 sec (dot product method)
tri+prep time:         0.015059 sec (incl time to compute L and U)
compute C time:        0.008601 sec
reduce (C) time:       0.000615 sec
rate    58.52 million edges/sec (incl time for U=triu(A))
rate    95.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.006418 sec (nthreads: 8 speedup 4.66232)
tricount time:         0.006907 sec (dot product method)
tri+prep time:         0.012751 sec (incl time to compute L and U)
compute C time:        0.006418 sec
reduce (C) time:       0.000490 sec
rate    69.11 million edges/sec (incl time for U=triu(A))
rate   127.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.023521 sec
tricount time:         0.026194 sec (dot product method)
tri+prep time:         0.032037 sec (incl time to compute L and U)
compute C time:        0.023521 sec
reduce (C) time:       0.002673 sec
rate    27.51 million edges/sec (incl time for U=triu(A))
rate    33.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.011493 sec (nthreads: 2 speedup 2.04665)
tricount time:         0.012796 sec (dot product method)
tri+prep time:         0.018639 sec (incl time to compute L and U)
compute C time:        0.011493 sec
reduce (C) time:       0.001303 sec
rate    47.28 million edges/sec (incl time for U=triu(A))
rate    68.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.006705 sec (nthreads: 4 speedup 3.50821)
tricount time:         0.007384 sec (dot product method)
tri+prep time:         0.013228 sec (incl time to compute L and U)
compute C time:        0.006705 sec
reduce (C) time:       0.000680 sec
rate    66.62 million edges/sec (incl time for U=triu(A))
rate   119.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.009763 sec (nthreads: 8 speedup 2.4093)
tricount time:         0.010669 sec (dot product method)
tri+prep time:         0.016512 sec (incl time to compute L and U)
compute C time:        0.009763 sec
reduce (C) time:       0.000906 sec
rate    53.37 million edges/sec (incl time for U=triu(A))
rate    82.59 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.026566 sec
tricount time:         0.028627 sec (saxpy method)
tri+prep time:         0.031492 sec (incl time to compute L)
compute C time:        0.026566 sec
reduce (C) time:       0.002061 sec
rate    27.98 million edges/sec (incl time for L=tril(A))
rate    30.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.022131 sec (nthreads: 2 speedup 1.2004)
tricount time:         0.023573 sec (saxpy method)
tri+prep time:         0.026438 sec (incl time to compute L)
compute C time:        0.022131 sec
reduce (C) time:       0.001442 sec
rate    33.33 million edges/sec (incl time for L=tril(A))
rate    37.38 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.011668 sec (nthreads: 4 speedup 2.27679)
tricount time:         0.012288 sec (saxpy method)
tri+prep time:         0.015153 sec (incl time to compute L)
compute C time:        0.011668 sec
reduce (C) time:       0.000620 sec
rate    58.15 million edges/sec (incl time for L=tril(A))
rate    71.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.016841 sec (nthreads: 8 speedup 1.57751)
tricount time:         0.018066 sec (saxpy method)
tri+prep time:         0.020931 sec (incl time to compute L)
compute C time:        0.016841 sec
reduce (C) time:       0.001225 sec
rate    42.10 million edges/sec (incl time for L=tril(A))
rate    48.78 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.027 sec

total time to read A matrix:       0.028004 sec

n 10000 # edges 99884
U=triu(A) time:        0.000362 sec
L=tril(A) time:        0.000234 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.011664 sec
tricount time:         0.011843 sec (dot product method)
tri+prep time:         0.012439 sec (incl time to compute L and U)
compute C time:        0.011664 sec
reduce (C) time:       0.000179 sec
rate     8.03 million edges/sec (incl time for U=triu(A))
rate     8.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.005893 sec (nthreads: 2 speedup 1.97936)
tricount time:         0.006089 sec (dot product method)
tri+prep time:         0.006686 sec (incl time to compute L and U)
compute C time:        0.005893 sec
reduce (C) time:       0.000196 sec
rate    14.94 million edges/sec (incl time for U=triu(A))
rate    16.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.003444 sec (nthreads: 4 speedup 3.387)
tricount time:         0.003609 sec (dot product method)
tri+prep time:         0.004206 sec (incl time to compute L and U)
compute C time:        0.003444 sec
reduce (C) time:       0.000165 sec
rate    23.75 million edges/sec (incl time for U=triu(A))
rate    27.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.002678 sec (nthreads: 8 speedup 4.35594)
tricount time:         0.002885 sec (dot product method)
tri+prep time:         0.003481 sec (incl time to compute L and U)
compute C time:        0.002678 sec
reduce (C) time:       0.000207 sec
rate    28.69 million edges/sec (incl time for U=triu(A))
rate    34.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.012640 sec
tricount time:         0.012779 sec (dot product method)
tri+prep time:         0.013376 sec (incl time to compute L and U)
compute C time:        0.012640 sec
reduce (C) time:       0.000139 sec
rate     7.47 million edges/sec (incl time for U=triu(A))
rate     7.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.004852 sec (nthreads: 2 speedup 2.60499)
tricount time:         0.004964 sec (dot product method)
tri+prep time:         0.005561 sec (incl time to compute L and U)
compute C time:        0.004852 sec
reduce (C) time:       0.000112 sec
rate    17.96 million edges/sec (incl time for U=triu(A))
rate    20.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.002892 sec (nthreads: 4 speedup 4.37131)
tricount time:         0.002976 sec (dot product method)
tri+prep time:         0.003572 sec (incl time to compute L and U)
compute C time:        0.002892 sec
reduce (C) time:       0.000085 sec
rate    27.96 million edges/sec (incl time for U=triu(A))
rate    33.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.004180 sec (nthreads: 8 speedup 3.02402)
tricount time:         0.004349 sec (dot product method)
tri+prep time:         0.004946 sec (incl time to compute L and U)
compute C time:        0.004180 sec
reduce (C) time:       0.000169 sec
rate    20.20 million edges/sec (incl time for U=triu(A))
rate    22.97 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.003369 sec
tricount time:         0.003378 sec (saxpy method)
tri+prep time:         0.003612 sec (incl time to compute L)
compute C time:        0.003369 sec
reduce (C) time:       0.000009 sec
rate    27.65 million edges/sec (incl time for L=tril(A))
rate    29.57 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002108 sec (nthreads: 2 speedup 1.59874)
tricount time:         0.002115 sec (saxpy method)
tri+prep time:         0.002349 sec (incl time to compute L)
compute C time:        0.002108 sec
reduce (C) time:       0.000007 sec
rate    42.53 million edges/sec (incl time for L=tril(A))
rate    47.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001484 sec (nthreads: 4 speedup 2.27006)
tricount time:         0.001490 sec (saxpy method)
tri+prep time:         0.001724 sec (incl time to compute L)
compute C time:        0.001484 sec
reduce (C) time:       0.000006 sec
rate    57.92 million edges/sec (incl time for L=tril(A))
rate    67.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005230 sec (nthreads: 8 speedup 0.644297)
tricount time:         0.005238 sec (saxpy method)
tri+prep time:         0.005472 sec (incl time to compute L)
compute C time:        0.005230 sec
reduce (C) time:       0.000008 sec
rate    18.25 million edges/sec (incl time for L=tril(A))
rate    19.07 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.017 sec

total time to read A matrix:       0.017593 sec

n 10000 # edges 99884
U=triu(A) time:        0.000807 sec
L=tril(A) time:        0.000660 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.014539 sec
tricount time:         0.014694 sec (dot product method)
tri+prep time:         0.016162 sec (incl time to compute L and U)
compute C time:        0.014539 sec
reduce (C) time:       0.000156 sec
rate     6.18 million edges/sec (incl time for U=triu(A))
rate     6.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.005467 sec (nthreads: 2 speedup 2.65947)
tricount time:         0.005544 sec (dot product method)
tri+prep time:         0.007011 sec (incl time to compute L and U)
compute C time:        0.005467 sec
reduce (C) time:       0.000077 sec
rate    14.25 million edges/sec (incl time for U=triu(A))
rate    18.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.003181 sec (nthreads: 4 speedup 4.57045)
tricount time:         0.003257 sec (dot product method)
tri+prep time:         0.004724 sec (incl time to compute L and U)
compute C time:        0.003181 sec
reduce (C) time:       0.000076 sec
rate    21.14 million edges/sec (incl time for U=triu(A))
rate    30.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.002482 sec (nthreads: 8 speedup 5.85712)
tricount time:         0.002570 sec (dot product method)
tri+prep time:         0.004037 sec (incl time to compute L and U)
compute C time:        0.002482 sec
reduce (C) time:       0.000088 sec
rate    24.74 million edges/sec (incl time for U=triu(A))
rate    38.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.013548 sec
tricount time:         0.013735 sec (dot product method)
tri+prep time:         0.015202 sec (incl time to compute L and U)
compute C time:        0.013548 sec
reduce (C) time:       0.000187 sec
rate     6.57 million edges/sec (incl time for U=triu(A))
rate     7.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.005883 sec (nthreads: 2 speedup 2.30282)
tricount time:         0.006074 sec (dot product method)
tri+prep time:         0.007542 sec (incl time to compute L and U)
compute C time:        0.005883 sec
reduce (C) time:       0.000191 sec
rate    13.24 million edges/sec (incl time for U=triu(A))
rate    16.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.003481 sec (nthreads: 4 speedup 3.89243)
tricount time:         0.003664 sec (dot product method)
tri+prep time:         0.005131 sec (incl time to compute L and U)
compute C time:        0.003481 sec
reduce (C) time:       0.000183 sec
rate    19.47 million edges/sec (incl time for U=triu(A))
rate    27.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.002990 sec (nthreads: 8 speedup 4.53042)
tricount time:         0.003239 sec (dot product method)
tri+prep time:         0.004706 sec (incl time to compute L and U)
compute C time:        0.002990 sec
reduce (C) time:       0.000249 sec
rate    21.22 million edges/sec (incl time for U=triu(A))
rate    30.84 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.004303 sec
tricount time:         0.004314 sec (saxpy method)
tri+prep time:         0.004974 sec (incl time to compute L)
compute C time:        0.004303 sec
reduce (C) time:       0.000011 sec
rate    20.08 million edges/sec (incl time for L=tril(A))
rate    23.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002223 sec (nthreads: 2 speedup 1.93561)
tricount time:         0.002230 sec (saxpy method)
tri+prep time:         0.002890 sec (incl time to compute L)
compute C time:        0.002223 sec
reduce (C) time:       0.000008 sec
rate    34.56 million edges/sec (incl time for L=tril(A))
rate    44.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001506 sec (nthreads: 4 speedup 2.8577)
tricount time:         0.001511 sec (saxpy method)
tri+prep time:         0.002171 sec (incl time to compute L)
compute C time:        0.001506 sec
reduce (C) time:       0.000005 sec
rate    46.01 million edges/sec (incl time for L=tril(A))
rate    66.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001319 sec (nthreads: 8 speedup 3.26257)
tricount time:         0.001325 sec (saxpy method)
tri+prep time:         0.001985 sec (incl time to compute L)
compute C time:        0.001319 sec
reduce (C) time:       0.000006 sec
rate    50.33 million edges/sec (incl time for L=tril(A))
rate    75.40 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 2.496 sec

total time to read A matrix:       2.523121 sec

n 100000 # edges 9990165
U=triu(A) time:        0.018984 sec
L=tril(A) time:        0.020506 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):        10.037756 sec
tricount time:        10.065191 sec (dot product method)
tri+prep time:        10.104681 sec (incl time to compute L and U)
compute C time:       10.037756 sec
reduce (C) time:       0.027436 sec
rate     0.99 million edges/sec (incl time for U=triu(A))
rate     0.99 million edges/sec (just tricount itself)
L*U' time (dot):         5.268859 sec (nthreads: 2 speedup 1.90511)
tricount time:         5.287288 sec (dot product method)
tri+prep time:         5.326778 sec (incl time to compute L and U)
compute C time:        5.268859 sec
reduce (C) time:       0.018428 sec
rate     1.88 million edges/sec (incl time for U=triu(A))
rate     1.89 million edges/sec (just tricount itself)
L*U' time (dot):         3.710080 sec (nthreads: 4 speedup 2.70554)
tricount time:         3.724638 sec (dot product method)
tri+prep time:         3.764128 sec (incl time to compute L and U)
compute C time:        3.710080 sec
reduce (C) time:       0.014557 sec
rate     2.65 million edges/sec (incl time for U=triu(A))
rate     2.68 million edges/sec (just tricount itself)
L*U' time (dot):         2.599948 sec (nthreads: 8 speedup 3.86075)
tricount time:         2.615894 sec (dot product method)
tri+prep time:         2.655384 sec (incl time to compute L and U)
compute C time:        2.599948 sec
reduce (C) time:       0.015946 sec
rate     3.76 million edges/sec (incl time for U=triu(A))
rate     3.82 million edges/sec (just tricount itself)
L*U' time (dot):        10.711924 sec
tricount time:        10.739376 sec (dot product method)
tri+prep time:        10.778866 sec (incl time to compute L and U)
compute C time:       10.711924 sec
reduce (C) time:       0.027452 sec
rate     0.93 million edges/sec (incl time for U=triu(A))
rate     0.93 million edges/sec (just tricount itself)
L*U' time (dot):         6.001916 sec (nthreads: 2 speedup 1.78475)
tricount time:         6.019951 sec (dot product method)
tri+prep time:         6.059441 sec (incl time to compute L and U)
compute C time:        6.001916 sec
reduce (C) time:       0.018035 sec
rate     1.65 million edges/sec (incl time for U=triu(A))
rate     1.66 million edges/sec (just tricount itself)
L*U' time (dot):         3.885379 sec (nthreads: 4 speedup 2.75698)
tricount time:         3.899436 sec (dot product method)
tri+prep time:         3.938926 sec (incl time to compute L and U)
compute C time:        3.885379 sec
reduce (C) time:       0.014056 sec
rate     2.54 million edges/sec (incl time for U=triu(A))
rate     2.56 million edges/sec (just tricount itself)
L*U' time (dot):         2.636954 sec (nthreads: 8 speedup 4.06223)
tricount time:         2.652757 sec (dot product method)
tri+prep time:         2.692247 sec (incl time to compute L and U)
compute C time:        2.636954 sec
reduce (C) time:       0.015802 sec
rate     3.71 million edges/sec (incl time for U=triu(A))
rate     3.77 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         5.043538 sec
tricount time:         5.049500 sec (saxpy method)
tri+prep time:         5.070006 sec (incl time to compute L)
compute C time:        5.043538 sec
reduce (C) time:       0.005962 sec
rate     1.97 million edges/sec (incl time for L=tril(A))
rate     1.98 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         3.138652 sec (nthreads: 2 speedup 1.60691)
tricount time:         3.141832 sec (saxpy method)
tri+prep time:         3.162339 sec (incl time to compute L)
compute C time:        3.138652 sec
reduce (C) time:       0.003181 sec
rate     3.16 million edges/sec (incl time for L=tril(A))
rate     3.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.656651 sec (nthreads: 4 speedup 3.04442)
tricount time:         1.658998 sec (saxpy method)
tri+prep time:         1.679504 sec (incl time to compute L)
compute C time:        1.656651 sec
reduce (C) time:       0.002346 sec
rate     5.95 million edges/sec (incl time for L=tril(A))
rate     6.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.782248 sec (nthreads: 8 speedup 2.82988)
tricount time:         1.783162 sec (saxpy method)
tri+prep time:         1.803668 sec (incl time to compute L)
compute C time:        1.782248 sec
reduce (C) time:       0.000914 sec
rate     5.54 million edges/sec (incl time for L=tril(A))
rate     5.60 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 1.848 sec

total time to read A matrix:       1.877002 sec

n 100000 # edges 9990165
U=triu(A) time:        0.019503 sec
L=tril(A) time:        0.026980 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         9.740372 sec
tricount time:         9.767869 sec (dot product method)
tri+prep time:         9.814351 sec (incl time to compute L and U)
compute C time:        9.740372 sec
reduce (C) time:       0.027498 sec
rate     1.02 million edges/sec (incl time for U=triu(A))
rate     1.02 million edges/sec (just tricount itself)
L*U' time (dot):         5.274905 sec (nthreads: 2 speedup 1.84655)
tricount time:         5.291900 sec (dot product method)
tri+prep time:         5.338383 sec (incl time to compute L and U)
compute C time:        5.274905 sec
reduce (C) time:       0.016996 sec
rate     1.87 million edges/sec (incl time for U=triu(A))
rate     1.89 million edges/sec (just tricount itself)
L*U' time (dot):         3.592400 sec (nthreads: 4 speedup 2.71138)
tricount time:         3.607020 sec (dot product method)
tri+prep time:         3.653502 sec (incl time to compute L and U)
compute C time:        3.592400 sec
reduce (C) time:       0.014619 sec
rate     2.73 million edges/sec (incl time for U=triu(A))
rate     2.77 million edges/sec (just tricount itself)
L*U' time (dot):         2.499505 sec (nthreads: 8 speedup 3.89692)
tricount time:         2.515554 sec (dot product method)
tri+prep time:         2.562037 sec (incl time to compute L and U)
compute C time:        2.499505 sec
reduce (C) time:       0.016050 sec
rate     3.90 million edges/sec (incl time for U=triu(A))
rate     3.97 million edges/sec (just tricount itself)
L*U' time (dot):        10.443740 sec
tricount time:        10.472049 sec (dot product method)
tri+prep time:        10.518531 sec (incl time to compute L and U)
compute C time:       10.443740 sec
reduce (C) time:       0.028309 sec
rate     0.95 million edges/sec (incl time for U=triu(A))
rate     0.95 million edges/sec (just tricount itself)
L*U' time (dot):         5.903907 sec (nthreads: 2 speedup 1.76895)
tricount time:         5.922306 sec (dot product method)
tri+prep time:         5.968789 sec (incl time to compute L and U)
compute C time:        5.903907 sec
reduce (C) time:       0.018399 sec
rate     1.67 million edges/sec (incl time for U=triu(A))
rate     1.69 million edges/sec (just tricount itself)
L*U' time (dot):         3.949521 sec (nthreads: 4 speedup 2.64431)
tricount time:         3.962544 sec (dot product method)
tri+prep time:         4.009026 sec (incl time to compute L and U)
compute C time:        3.949521 sec
reduce (C) time:       0.013023 sec
rate     2.49 million edges/sec (incl time for U=triu(A))
rate     2.52 million edges/sec (just tricount itself)
L*U' time (dot):         2.604668 sec (nthreads: 8 speedup 4.00962)
tricount time:         2.620189 sec (dot product method)
tri+prep time:         2.666671 sec (incl time to compute L and U)
compute C time:        2.604668 sec
reduce (C) time:       0.015521 sec
rate     3.75 million edges/sec (incl time for U=triu(A))
rate     3.81 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         4.623672 sec
tricount time:         4.629221 sec (saxpy method)
tri+prep time:         4.656200 sec (incl time to compute L)
compute C time:        4.623672 sec
reduce (C) time:       0.005549 sec
rate     2.15 million edges/sec (incl time for L=tril(A))
rate     2.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         2.570878 sec (nthreads: 2 speedup 1.79848)
tricount time:         2.574308 sec (saxpy method)
tri+prep time:         2.601288 sec (incl time to compute L)
compute C time:        2.570878 sec
reduce (C) time:       0.003430 sec
rate     3.84 million edges/sec (incl time for L=tril(A))
rate     3.88 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.508288 sec (nthreads: 4 speedup 3.06551)
tricount time:         1.510577 sec (saxpy method)
tri+prep time:         1.537557 sec (incl time to compute L)
compute C time:        1.508288 sec
reduce (C) time:       0.002289 sec
rate     6.50 million edges/sec (incl time for L=tril(A))
rate     6.61 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.565095 sec (nthreads: 8 speedup 2.95424)
tricount time:         1.578662 sec (saxpy method)
tri+prep time:         1.605642 sec (incl time to compute L)
compute C time:        1.565095 sec
reduce (C) time:       0.013567 sec
rate     6.22 million edges/sec (incl time for L=tril(A))
rate     6.33 million edges/sec (just tricount itself)

